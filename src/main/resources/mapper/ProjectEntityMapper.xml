<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sisp.dao.ProjectEntityMapper">

    <resultMap id="BaseResultMap" type="com.sisp.dao.entity.ProjectEntity">
        <id column="id" jdbcType="VARCHAR" property="id"/>
        <result column="user_id" jdbcType="VARCHAR" property="userId"/>
        <result column="project_name" jdbcType="VARCHAR" property="projectName"/>
        <result column="project_content" jdbcType="LONGVARCHAR" property="projectContent"/>
        <result column="created_by" jdbcType="CHAR" property="createdBy"/>
        <result column="creation_date" jdbcType="TIMESTAMP" property="creationDate"/>
        <result column="last_updated_by" jdbcType="CHAR" property="lastUpdatedBy"/>
        <result column="last_updated_date" jdbcType="TIMESTAMP" property="lastUpdatedDate"/>
    </resultMap>

    <!--queryProjectList-->
    <select id="queryProjectList" resultMap="BaseResultMap" parameterType="com.sisp.dao.entity.ProjectEntity">
        SELECT *
        FROM project_info
        <where>
            <if test="project.id != '' and project.id != null">
                AND id = #{project.id}
            </if>
            <if test="project.projectName != '' and project.projectName != null">
                AND project_name LIKE CONCAT('%', #{project.projectName}, '%')
            </if>
        </where>
    </select>

    <!--insert-->
    <insert id="insert" parameterType="com.sisp.dao.entity.ProjectEntity">
        INSERT INTO project_info (id, user_id, project_name, project_content, created_by, creation_date, last_updated_by, last_updated_date)
        VALUES (#{id}, #{userId}, #{projectName}, #{projectContent}, #{createdBy}, now(), #{lastUpdatedBy}, now())
    </insert>

    <update id="updateByPrimaryKeySelective" parameterType="com.sisp.dao.entity.ProjectEntity">
        UPDATE project_info
        <set>
            <if test="projectName != null">
                project_name=#{projectName,jdbcType=VARCHAR},
            </if>
            <if test="projectContent != null">
                project_content=#{projectContent,jdbcType=LONGVARCHAR},
            </if>
            <if test="lastUpdatedBy != null">
                last_updated_by=#{lastUpdatedBy,jdbcType=CHAR},
            </if>
            last_updated_date=now(),
        </set>
        WHERE id=#{id,jdbcType=VARCHAR}
    </update>

    <delete id="deleteProjectById" parameterType="com.sisp.dao.entity.ProjectEntity">
        DELETE FROM project_info
        WHERE id = #{id,jdbcType=VARCHAR}
    </delete>

    <!--queryProjectQuestionnaire-->
    <select id="queryProjectQuestionnaire" parameterType="com.sisp.dao.entity.ProjectEntity" resultType="java.util.HashMap">
        SELECT pi.project_name, pi.created_by, pi.project_content, qni.id, qni.publish_time, qni.questionnaire_name, qni.status
        FROM project_info AS pi JOIN questionnaire_info AS qni ON pi.id = qni.project_id
        WHERE pi.id = #{project.id,jdbcType=VARCHAR} AND qni.status != -1
    </select>

    <!--queryQuestionnaireAnswers-->
    <select id="queryQuestionnaireAnswers" parameterType="java.lang.String" resultType="java.util.HashMap">
        SELECT q.id, q.questionnaire_name, MAX(a.answer_time) AS answer_time, a.respondent
        FROM questionnaire_info q
        JOIN question_info qi ON q.id = qi.questionnaire_id
        JOIN answer_info a ON qi.id = a.question_id
        WHERE q.project_id = #{projectId}
        <if test="respondent != null and respondent != ''">
            AND a.respondent LIKE CONCAT('%', #{respondent}, '%')
        </if>
        GROUP BY q.id, q.questionnaire_name, a.respondent
    </select>
    
    <select id="querySameQuestionStat" resultType="java.util.HashMap">
        SELECT q.questionnaire_name, qi.question_description, o.id, o.choose_term, COUNT(a.option_id) AS option_count
        FROM questionnaire_info q
                 JOIN question_info qi ON q.id = qi.questionnaire_id
                 JOIN answer_info a ON qi.id = a.question_id
                 LEFT JOIN option_info o ON a.option_id = o.id
        WHERE qi.question_description = #{question}
          AND q.project_id = #{projectId}
        GROUP BY q.project_id, q.questionnaire_name, qi.question_description, o.id, o.choose_term;
    </select>
</mapper>