<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sisp.dao.QuestionnaireEntityMapper">

    <resultMap id="BaseResultMap" type="com.sisp.dao.entity.QuestionnaireEntity">
        <id column="id" jdbcType="VARCHAR" property="id"/>
        <result column="questionnaire_name" jdbcType="VARCHAR" property="questionnaireName"/>
        <result column="questionnaire_description" jdbcType="LONGVARCHAR" property="questionnaireDescription"/>
        <result column="created_by" jdbcType="CHAR" property="createdBy"/>
        <result column="creation_date" jdbcType="TIMESTAMP" property="creationDate"/>
        <result column="project_id" jdbcType="VARCHAR" property="projectId"/>
        <result column="type" jdbcType="INTEGER" property="type"/>
        <result column="startTime" jdbcType="TIMESTAMP" property="startTime"/>
        <result column="endTime" jdbcType="TIMESTAMP" property="endTime"/>
        <result column="status" jdbcType="TINYINT" property="status"/>
    </resultMap>

    <!--queryQuestionnaireList-->
    <select id="queryQuestionnaireList" resultMap="BaseResultMap"
            parameterType="com.sisp.dao.entity.QuestionnaireEntity">
        SELECT *
        FROM questionnaire_info
        <where>
            <if test="questionnaire.id != '' and questionnaire.id != null">
                AND id = #{questionnaire.id}
            </if>
            <if test="questionnaire.questionnaireName != '' and questionnaire.questionnaireName != null">
                AND questionnaire_name LIKE CONCAT('%', #{questionnaire.questionnaireName}, '%')
            </if>
            <if test="questionnaire.projectId != '' and questionnaire.projectId != null">
                AND project_id LIKE CONCAT('%', #{questionnaire.projectId}, '%')
            </if>
            AND status != -1
        </where>
    </select>

    <!--insert-->
    <insert id="insert" parameterType="com.sisp.dao.entity.QuestionnaireEntity">
        INSERT INTO questionnaire_info (id, questionnaire_name, questionnaire_description, created_by, creation_date,
                                        project_id, type, start_time, end_time, publish_time, status)
        VALUES (#{id}, #{questionnaireName}, #{questionnaireDescription}, #{createdBy}, now(), #{projectId}, #{type},
                #{startTime}, #{endTime}, #{publishTime}, #{status})
    </insert>

    <!--updateByPrimaryKeySelective-->
    <update id="updateByPrimaryKeySelective" parameterType="com.sisp.dao.entity.QuestionnaireEntity">
        UPDATE questionnaire_info
        <set>
            <if test="questionnaireName != null">
                questionnaire_name=#{questionnaireName,jdbcType=VARCHAR},
            </if>
            <if test="questionnaireDescription != null">
                questionnaire_description=#{questionnaireDescription,jdbcType=LONGVARCHAR},
            </if>
            <if test="publishTime != null">
                publish_time=now(),
            </if>
            <if test="status != null and status != -2">
                status=#{status,jdbcType=TINYINT},
            </if>
        </set>
        WHERE id=#{id,jdbcType=VARCHAR}
    </update>

    <select id="queryQuestionStat" resultType="java.util.HashMap" parameterType="com.sisp.dao.entity.QuestionnaireEntity">
        SELECT *
        FROM (SELECT q.questionnaire_name,
                     qi.question_description,
                     o.id,
                     o.choose_term,
                     COUNT(a.option_id) AS option_count,
                     qi.question_index
              FROM questionnaire_info q
                       JOIN question_info qi ON q.id = qi.questionnaire_id
                       JOIN answer_info a ON qi.id = a.question_id
                       LEFT JOIN option_info o ON a.option_id = o.id
              WHERE q.id = #{questionnaire.id}
                AND qi.type IN (1, 2)
              GROUP BY q.questionnaire_name, qi.question_description, o.id, o.choose_term, qi.question_index
              UNION ALL
              SELECT q.questionnaire_name,
                     qi.question_description,
                     NULL                  AS option_id,
                     a.fill_content        AS option_text,
                     COUNT(a.fill_content) AS option_count,
                     qi.question_index
              FROM questionnaire_info q
                       JOIN question_info qi ON q.id = qi.questionnaire_id
                       JOIN answer_info a ON qi.id = a.question_id
              WHERE q.id = #{questionnaire.id}
                AND qi.type = 3
              GROUP BY q.questionnaire_name, qi.question_description, a.fill_content, qi.question_index) AS subquery
        ORDER BY subquery.question_index
    </select>

</mapper>